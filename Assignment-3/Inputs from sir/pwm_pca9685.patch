--- ./zephyr-zephyr-v1.10.0/drivers/pwm/pwm_pca9685.c	2018-03-08 16:36:16.395646493 -0700
+++ ./zephyr_git-v1.10.0/drivers/pwm/pwm_pca9685.c	2017-12-08 12:32:22.000000000 -0700
@@ -70,8 +70,7 @@
 	u16_t i2c_addr = config->i2c_slave_addr;
 	u8_t buf[] = { 0, 0, 0, 0, 0};
 
-//	ARG_UNUSED(period_count);
-
+	ARG_UNUSED(period_count);
 	if (!_has_i2c_master(dev)) {
 		return -EINVAL;
 	}
@@ -85,37 +84,26 @@
 	 * If pulse_count value == 0, treat it as 0%.
 	 * Otherwise, populate registers accordingly.
 	 */
-	if (pulse_count >= PWM_ONE_PERIOD_TICKS) {  // Always High
+	if (pulse_count >= PWM_ONE_PERIOD_TICKS) {
 		buf[1] = 0x0;
 		buf[2] = (1 << 4);
 		buf[3] = 0x0;
 		buf[4] = 0x0;
-	} else if (pulse_count == 0) {	// always LOW
+	} else if (pulse_count == 0) {
 		buf[1] = 0x0;
 		buf[2] = 0x0;
 		buf[3] = 0x0;
 		buf[4] = (1 << 4);
-	} else if (pulse_count==period_count) {	
+	} else {
 		/* No start delay given. When the count is 0 the
 		 * pwm will be high .
-		 
-		buf[1] = 0x0;
-		buf[2] = 0x0;
-		buf[3] = (pulse_count & 0xFF);
-		buf[4] = ((pulse_count >> 8) & 0x0F);  */
+		 */
+		buf[0] = 0x0;
 		buf[1] = 0x0;
-		buf[2] = (1 << 4);		// always HIGH
-		buf[3] = 0x0;
-		buf[4] = 0x0;
-	} else { 	// on and off ticks
-		buf[1] = (period_count & 0xFF);
-		buf[2] = ((period_count >> 8) & 0x0F);
-		buf[3] = (pulse_count & 0xFF);
-		buf[4] = ((pulse_count >> 8) & 0x0F);
+		buf[2] = (pulse_count & 0xFF);
+		buf[3] = ((pulse_count >> 8) & 0x0F);
 	}
 
-//	printk("send I2c msg: %x %x %x %x %x -- i2c_addr %x\n", buf[0], buf[1], buf[2], buf[3], buf[4], i2c_addr);
-
 	return i2c_write(i2c_master, buf, sizeof(buf), i2c_addr);
 }
 
